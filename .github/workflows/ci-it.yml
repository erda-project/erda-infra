name: CI AND IT
on:
  push:
    tags:
      - v*
    branches:
      - develop
      - master
      - release/*
  pull_request:
jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Run Lint
        uses: golangci/golangci-lint-action@v2
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: v1.38
          # Optional: working directory, useful for monorepos
          # working-directory: somedir
          # Optional: golangci-lint command line arguments.
          # args: --issues-exit-code=0
          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true
          # Optional: if set to true then the action will use pre-installed Go.
          # skip-go-installation: true
          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          # skip-pkg-cache: true
          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true
      - name: Run Test
        run: |
          go test -cpu=2 -timeout 10s -race -coverprofile=coverage.txt -covermode=atomic ./...
          bash <(curl -s https://codecov.io/bash)
  CODE-CHECK:
    runs-on: ubuntu-latest
    container:
      image: recallsong/golang-base:210416
    steps:
      - uses: actions/checkout@v2
      - name: Run go mod tidy
        run: make tidy
      - name: Run Go Lint
        run: |
          go get -u golang.org/x/lint/golint
          golint -set_exit_status=1 ./...
      # - name: Run Go Vet
      #   run: go vet ./...
